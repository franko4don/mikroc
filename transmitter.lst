;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 1/19/2016 11:28:35 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28FE      	GOTO       254
_delay500us:
;transmitter.c,28 :: 		void delay500us(){
;transmitter.c,29 :: 		counter=0;
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x01A0      	CLRF       _counter
0x0006	0x01A1      	CLRF       _counter+1
;transmitter.c,30 :: 		TMR0=0;
0x0007	0x0181      	CLRF       TMR0
;transmitter.c,31 :: 		OPTION_REG=0xd2;
0x0008	0x30D2      	MOVLW      210
0x0009	0x1683      	BSF        STATUS, 5
0x000A	0x0081      	MOVWF      OPTION_REG
;transmitter.c,32 :: 		INTCON=0x00;
0x000B	0x018B      	CLRF       INTCON
;transmitter.c,33 :: 		TMR0IE_bit=1;
0x000C	0x168B      	BSF        TMR0IE_bit, 5
;transmitter.c,34 :: 		while(1){
L_delay500us4:
;transmitter.c,35 :: 		if(TMR0IF_bit){
0x000D	0x1D0B      	BTFSS      TMR0IF_bit, 2
0x000E	0x2814      	GOTO       L_delay500us6
;transmitter.c,36 :: 		counter++;
0x000F	0x1283      	BCF        STATUS, 5
0x0010	0x0AA0      	INCF       _counter, 1
0x0011	0x1903      	BTFSC      STATUS, 2
0x0012	0x0AA1      	INCF       _counter+1, 1
;transmitter.c,37 :: 		TMR0IF_bit=0;
0x0013	0x110B      	BCF        TMR0IF_bit, 2
;transmitter.c,38 :: 		}
L_delay500us6:
0x0014	0x1283      	BCF        STATUS, 5
;transmitter.c,39 :: 		if(counter==15)break;
0x0015	0x3000      	MOVLW      0
0x0016	0x0621      	XORWF      _counter+1, 0
0x0017	0x1D03      	BTFSS      STATUS, 2
0x0018	0x281B      	GOTO       L__delay500us37
0x0019	0x300F      	MOVLW      15
0x001A	0x0620      	XORWF      _counter, 0
L__delay500us37:
0x001B	0x1D03      	BTFSS      STATUS, 2
0x001C	0x281E      	GOTO       L_delay500us7
0x001D	0x281F      	GOTO       L_delay500us5
L_delay500us7:
;transmitter.c,40 :: 		}
0x001E	0x280D      	GOTO       L_delay500us4
L_delay500us5:
;transmitter.c,43 :: 		}
L_end_delay500us:
0x001F	0x0008      	RETURN
; end of _delay500us
_bitRead:
;transmitter.c,4 :: 		int bitRead(int signal,int bitPosition){
;transmitter.c,5 :: 		bitManipulate=0x01;
0x0020	0x3001      	MOVLW      1
0x0021	0x1283      	BCF        STATUS, 5
0x0022	0x1303      	BCF        STATUS, 6
0x0023	0x00A2      	MOVWF      _bitManipulate
0x0024	0x3000      	MOVLW      0
0x0025	0x00A3      	MOVWF      _bitManipulate+1
;transmitter.c,6 :: 		bitManipulate<<=bitPosition;
0x0026	0x082C      	MOVF       FARG_bitRead_bitPosition, 0
0x0027	0x00F2      	MOVWF      R2
0x0028	0x0822      	MOVF       _bitManipulate, 0
0x0029	0x00F0      	MOVWF      R0
0x002A	0x0823      	MOVF       _bitManipulate+1, 0
0x002B	0x00F1      	MOVWF      R0+1
0x002C	0x0872      	MOVF       R2, 0
L__bitRead32:
0x002D	0x1903      	BTFSC      STATUS, 2
0x002E	0x2834      	GOTO       L__bitRead33
0x002F	0x0DF0      	RLF        R0, 1
0x0030	0x0DF1      	RLF        R0+1, 1
0x0031	0x1070      	BCF        R0, 0
0x0032	0x3EFF      	ADDLW      255
0x0033	0x282D      	GOTO       L__bitRead32
L__bitRead33:
0x0034	0x0870      	MOVF       R0, 0
0x0035	0x00A2      	MOVWF      _bitManipulate
0x0036	0x0871      	MOVF       R0+1, 0
0x0037	0x00A3      	MOVWF      _bitManipulate+1
;transmitter.c,7 :: 		return (signal&bitManipulate);
0x0038	0x082A      	MOVF       FARG_bitRead_signal, 0
0x0039	0x05F0      	ANDWF      R0, 1
0x003A	0x082B      	MOVF       FARG_bitRead_signal+1, 0
0x003B	0x05F1      	ANDWF      R0+1, 1
;transmitter.c,8 :: 		}
L_end_bitRead:
0x003C	0x0008      	RETURN
; end of _bitRead
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x003D	0x1283      	BCF        STATUS, 5
0x003E	0x1303      	BCF        STATUS, 6
0x003F	0x0825      	MOVF       ___DoICPAddr+1, 0
0x0040	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0041	0x0824      	MOVF       ___DoICPAddr, 0
0x0042	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0043	0x0008      	RETURN
; end of _____DoICP
_preamble:
;transmitter.c,45 :: 		void preamble(){
;transmitter.c,47 :: 		for(i=0; i<20; i++){
0x0044	0x1283      	BCF        STATUS, 5
0x0045	0x1303      	BCF        STATUS, 6
0x0046	0x01AA      	CLRF       preamble_i_L0
0x0047	0x01AB      	CLRF       preamble_i_L0+1
L_preamble8:
0x0048	0x3080      	MOVLW      128
0x0049	0x062B      	XORWF      preamble_i_L0+1, 0
0x004A	0x00F0      	MOVWF      R0
0x004B	0x3080      	MOVLW      128
0x004C	0x0270      	SUBWF      R0, 0
0x004D	0x1D03      	BTFSS      STATUS, 2
0x004E	0x2851      	GOTO       L__preamble39
0x004F	0x3014      	MOVLW      20
0x0050	0x022A      	SUBWF      preamble_i_L0, 0
L__preamble39:
0x0051	0x1803      	BTFSC      STATUS, 0
0x0052	0x285B      	GOTO       L_preamble9
;transmitter.c,48 :: 		PORTC.F0=1;
0x0053	0x1407      	BSF        PORTC, 0
;transmitter.c,49 :: 		delay500us();
0x0054	0x2003      	CALL       _delay500us
;transmitter.c,50 :: 		PORTC.F0=0;
0x0055	0x1007      	BCF        PORTC, 0
;transmitter.c,51 :: 		delay500us();
0x0056	0x2003      	CALL       _delay500us
;transmitter.c,47 :: 		for(i=0; i<20; i++){
0x0057	0x0AAA      	INCF       preamble_i_L0, 1
0x0058	0x1903      	BTFSC      STATUS, 2
0x0059	0x0AAB      	INCF       preamble_i_L0+1, 1
;transmitter.c,52 :: 		}
0x005A	0x2848      	GOTO       L_preamble8
L_preamble9:
;transmitter.c,53 :: 		}
L_end_preamble:
0x005B	0x0008      	RETURN
; end of _preamble
_delay3ms:
;transmitter.c,10 :: 		void delay3ms(){
;transmitter.c,11 :: 		counter=0;
0x005C	0x1283      	BCF        STATUS, 5
0x005D	0x1303      	BCF        STATUS, 6
0x005E	0x01A0      	CLRF       _counter
0x005F	0x01A1      	CLRF       _counter+1
;transmitter.c,12 :: 		TMR0=0;
0x0060	0x0181      	CLRF       TMR0
;transmitter.c,13 :: 		OPTION_REG=0xd2;
0x0061	0x30D2      	MOVLW      210
0x0062	0x1683      	BSF        STATUS, 5
0x0063	0x0081      	MOVWF      OPTION_REG
;transmitter.c,14 :: 		INTCON=0x00;
0x0064	0x018B      	CLRF       INTCON
;transmitter.c,15 :: 		TMR0IE_bit=1;
0x0065	0x168B      	BSF        TMR0IE_bit, 5
;transmitter.c,16 :: 		TMR0IF_bit=0;
0x0066	0x110B      	BCF        TMR0IF_bit, 2
;transmitter.c,17 :: 		while(1){
L_delay3ms0:
;transmitter.c,18 :: 		if(TMR0IF_bit){
0x0067	0x1D0B      	BTFSS      TMR0IF_bit, 2
0x0068	0x286E      	GOTO       L_delay3ms2
;transmitter.c,19 :: 		counter++;
0x0069	0x1283      	BCF        STATUS, 5
0x006A	0x0AA0      	INCF       _counter, 1
0x006B	0x1903      	BTFSC      STATUS, 2
0x006C	0x0AA1      	INCF       _counter+1, 1
;transmitter.c,20 :: 		TMR0IF_bit=0;
0x006D	0x110B      	BCF        TMR0IF_bit, 2
;transmitter.c,21 :: 		}
L_delay3ms2:
0x006E	0x1283      	BCF        STATUS, 5
;transmitter.c,22 :: 		if(counter==93)break;
0x006F	0x3000      	MOVLW      0
0x0070	0x0621      	XORWF      _counter+1, 0
0x0071	0x1D03      	BTFSS      STATUS, 2
0x0072	0x2875      	GOTO       L__delay3ms35
0x0073	0x305D      	MOVLW      93
0x0074	0x0620      	XORWF      _counter, 0
L__delay3ms35:
0x0075	0x1D03      	BTFSS      STATUS, 2
0x0076	0x2878      	GOTO       L_delay3ms3
0x0077	0x2879      	GOTO       L_delay3ms1
L_delay3ms3:
;transmitter.c,23 :: 		}
0x0078	0x2867      	GOTO       L_delay3ms0
L_delay3ms1:
;transmitter.c,26 :: 		}
L_end_delay3ms:
0x0079	0x0008      	RETURN
; end of _delay3ms
_encodeSignal:
;transmitter.c,75 :: 		int encodeSignal(int rawSignal){
;transmitter.c,77 :: 		int encodedSignal=0x00;
0x007A	0x1283      	BCF        STATUS, 5
0x007B	0x1303      	BCF        STATUS, 6
0x007C	0x01A8      	CLRF       encodeSignal_encodedSignal_L0
0x007D	0x01A9      	CLRF       encodeSignal_encodedSignal_L0+1
;transmitter.c,78 :: 		for(i=0; i<4; i++){
0x007E	0x01F3      	CLRF       R3
0x007F	0x01F4      	CLRF       R3+1
L_encodeSignal16:
0x0080	0x3080      	MOVLW      128
0x0081	0x0674      	XORWF      R3+1, 0
0x0082	0x00F0      	MOVWF      R0
0x0083	0x3080      	MOVLW      128
0x0084	0x0270      	SUBWF      R0, 0
0x0085	0x1D03      	BTFSS      STATUS, 2
0x0086	0x2889      	GOTO       L__encodeSignal44
0x0087	0x3004      	MOVLW      4
0x0088	0x0273      	SUBWF      R3, 0
L__encodeSignal44:
0x0089	0x1803      	BTFSC      STATUS, 0
0x008A	0x28B6      	GOTO       L_encodeSignal17
;transmitter.c,79 :: 		if((rawSignal&0x08)==0x08){
0x008B	0x3008      	MOVLW      8
0x008C	0x0526      	ANDWF      FARG_encodeSignal_rawSignal, 0
0x008D	0x00F1      	MOVWF      R1
0x008E	0x0827      	MOVF       FARG_encodeSignal_rawSignal+1, 0
0x008F	0x00F2      	MOVWF      R1+1
0x0090	0x3000      	MOVLW      0
0x0091	0x05F2      	ANDWF      R1+1, 1
0x0092	0x3000      	MOVLW      0
0x0093	0x0672      	XORWF      R1+1, 0
0x0094	0x1D03      	BTFSS      STATUS, 2
0x0095	0x2898      	GOTO       L__encodeSignal45
0x0096	0x3008      	MOVLW      8
0x0097	0x0671      	XORWF      R1, 0
L__encodeSignal45:
0x0098	0x1D03      	BTFSS      STATUS, 2
0x0099	0x28A5      	GOTO       L_encodeSignal19
;transmitter.c,80 :: 		encodedSignal^=0x02;
0x009A	0x3002      	MOVLW      2
0x009B	0x06A8      	XORWF      encodeSignal_encodedSignal_L0, 1
0x009C	0x3000      	MOVLW      0
0x009D	0x06A9      	XORWF      encodeSignal_encodedSignal_L0+1, 1
;transmitter.c,81 :: 		encodedSignal<<=2;
0x009E	0x0DA8      	RLF        encodeSignal_encodedSignal_L0, 1
0x009F	0x0DA9      	RLF        encodeSignal_encodedSignal_L0+1, 1
0x00A0	0x1028      	BCF        encodeSignal_encodedSignal_L0, 0
0x00A1	0x0DA8      	RLF        encodeSignal_encodedSignal_L0, 1
0x00A2	0x0DA9      	RLF        encodeSignal_encodedSignal_L0+1, 1
0x00A3	0x1028      	BCF        encodeSignal_encodedSignal_L0, 0
;transmitter.c,82 :: 		}else{
0x00A4	0x28AF      	GOTO       L_encodeSignal20
L_encodeSignal19:
;transmitter.c,83 :: 		encodedSignal^=0x01;
0x00A5	0x3001      	MOVLW      1
0x00A6	0x06A8      	XORWF      encodeSignal_encodedSignal_L0, 1
0x00A7	0x3000      	MOVLW      0
0x00A8	0x06A9      	XORWF      encodeSignal_encodedSignal_L0+1, 1
;transmitter.c,84 :: 		encodedSignal<<=2;
0x00A9	0x0DA8      	RLF        encodeSignal_encodedSignal_L0, 1
0x00AA	0x0DA9      	RLF        encodeSignal_encodedSignal_L0+1, 1
0x00AB	0x1028      	BCF        encodeSignal_encodedSignal_L0, 0
0x00AC	0x0DA8      	RLF        encodeSignal_encodedSignal_L0, 1
0x00AD	0x0DA9      	RLF        encodeSignal_encodedSignal_L0+1, 1
0x00AE	0x1028      	BCF        encodeSignal_encodedSignal_L0, 0
;transmitter.c,85 :: 		}
L_encodeSignal20:
;transmitter.c,87 :: 		rawSignal=rawSignal<<1;
0x00AF	0x0DA6      	RLF        FARG_encodeSignal_rawSignal, 1
0x00B0	0x0DA7      	RLF        FARG_encodeSignal_rawSignal+1, 1
0x00B1	0x1026      	BCF        FARG_encodeSignal_rawSignal, 0
;transmitter.c,78 :: 		for(i=0; i<4; i++){
0x00B2	0x0AF3      	INCF       R3, 1
0x00B3	0x1903      	BTFSC      STATUS, 2
0x00B4	0x0AF4      	INCF       R3+1, 1
;transmitter.c,88 :: 		}
0x00B5	0x2880      	GOTO       L_encodeSignal16
L_encodeSignal17:
;transmitter.c,89 :: 		return encodedSignal>>2;
0x00B6	0x0828      	MOVF       encodeSignal_encodedSignal_L0, 0
0x00B7	0x00F0      	MOVWF      R0
0x00B8	0x0829      	MOVF       encodeSignal_encodedSignal_L0+1, 0
0x00B9	0x00F1      	MOVWF      R0+1
0x00BA	0x0CF1      	RRF        R0+1, 1
0x00BB	0x0CF0      	RRF        R0, 1
0x00BC	0x13F1      	BCF        R0+1, 7
0x00BD	0x1B71      	BTFSC      R0+1, 6
0x00BE	0x17F1      	BSF        R0+1, 7
0x00BF	0x0CF1      	RRF        R0+1, 1
0x00C0	0x0CF0      	RRF        R0, 1
0x00C1	0x13F1      	BCF        R0+1, 7
0x00C2	0x1B71      	BTFSC      R0+1, 6
0x00C3	0x17F1      	BSF        R0+1, 7
;transmitter.c,90 :: 		}
L_end_encodeSignal:
0x00C4	0x0008      	RETURN
; end of _encodeSignal
_transmitSignal:
;transmitter.c,55 :: 		void transmitSignal(int signal){
;transmitter.c,57 :: 		preamble();
0x00C5	0x2044      	CALL       _preamble
;transmitter.c,58 :: 		PORTC.F0=1;
0x00C6	0x1407      	BSF        PORTC, 0
;transmitter.c,59 :: 		delay3ms();
0x00C7	0x205C      	CALL       _delay3ms
;transmitter.c,60 :: 		PORTC.F0=0;
0x00C8	0x1007      	BCF        PORTC, 0
;transmitter.c,61 :: 		delay500us();
0x00C9	0x2003      	CALL       _delay500us
;transmitter.c,62 :: 		for(j=0; j<8; j++){
0x00CA	0x01A8      	CLRF       transmitSignal_j_L0
0x00CB	0x01A9      	CLRF       transmitSignal_j_L0+1
L_transmitSignal11:
0x00CC	0x3080      	MOVLW      128
0x00CD	0x0629      	XORWF      transmitSignal_j_L0+1, 0
0x00CE	0x00F0      	MOVWF      R0
0x00CF	0x3080      	MOVLW      128
0x00D0	0x0270      	SUBWF      R0, 0
0x00D1	0x1D03      	BTFSS      STATUS, 2
0x00D2	0x28D5      	GOTO       L__transmitSignal41
0x00D3	0x3008      	MOVLW      8
0x00D4	0x0228      	SUBWF      transmitSignal_j_L0, 0
L__transmitSignal41:
0x00D5	0x1803      	BTFSC      STATUS, 0
0x00D6	0x28F0      	GOTO       L_transmitSignal12
;transmitter.c,63 :: 		if(bitRead(signal,j)!=0){
0x00D7	0x0826      	MOVF       FARG_transmitSignal_signal, 0
0x00D8	0x00AA      	MOVWF      FARG_bitRead_signal
0x00D9	0x0827      	MOVF       FARG_transmitSignal_signal+1, 0
0x00DA	0x00AB      	MOVWF      FARG_bitRead_signal+1
0x00DB	0x0828      	MOVF       transmitSignal_j_L0, 0
0x00DC	0x00AC      	MOVWF      FARG_bitRead_bitPosition
0x00DD	0x0829      	MOVF       transmitSignal_j_L0+1, 0
0x00DE	0x00AD      	MOVWF      FARG_bitRead_bitPosition+1
0x00DF	0x2020      	CALL       _bitRead
0x00E0	0x3000      	MOVLW      0
0x00E1	0x0671      	XORWF      R0+1, 0
0x00E2	0x1D03      	BTFSS      STATUS, 2
0x00E3	0x28E6      	GOTO       L__transmitSignal42
0x00E4	0x3000      	MOVLW      0
0x00E5	0x0670      	XORWF      R0, 0
L__transmitSignal42:
0x00E6	0x1903      	BTFSC      STATUS, 2
0x00E7	0x28EA      	GOTO       L_transmitSignal14
;transmitter.c,64 :: 		PORTC.F0=1;
0x00E8	0x1407      	BSF        PORTC, 0
;transmitter.c,65 :: 		}else{
0x00E9	0x28EB      	GOTO       L_transmitSignal15
L_transmitSignal14:
;transmitter.c,66 :: 		PORTC.F0=0;
0x00EA	0x1007      	BCF        PORTC, 0
;transmitter.c,67 :: 		}
L_transmitSignal15:
;transmitter.c,68 :: 		delay500us();
0x00EB	0x2003      	CALL       _delay500us
;transmitter.c,62 :: 		for(j=0; j<8; j++){
0x00EC	0x0AA8      	INCF       transmitSignal_j_L0, 1
0x00ED	0x1903      	BTFSC      STATUS, 2
0x00EE	0x0AA9      	INCF       transmitSignal_j_L0+1, 1
;transmitter.c,69 :: 		}
0x00EF	0x28CC      	GOTO       L_transmitSignal11
L_transmitSignal12:
;transmitter.c,70 :: 		PORTC.F0=0;
0x00F0	0x1007      	BCF        PORTC, 0
;transmitter.c,71 :: 		}
L_end_transmitSignal:
0x00F1	0x0008      	RETURN
; end of _transmitSignal
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x00F2	0x203D      	CALL       _____DoICP
0x00F3	0x118A      	BCF        PCLATH, 3
0x00F4	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x00F5	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x00F6	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x00F7	0x0AA4      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x00F8	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x00F9	0x0AA5      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x00FA	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x00FB	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x00FC	0x28F2      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x00FD	0x0008      	RETURN
; end of ___CC2DW
_main:
;transmitter.c,94 :: 		void main() {
;transmitter.c,95 :: 		TRISB=0xff;
0x00FE	0x30FF      	MOVLW      255
0x00FF	0x1683      	BSF        STATUS, 5
0x0100	0x1303      	BCF        STATUS, 6
0x0101	0x0086      	MOVWF      TRISB
;transmitter.c,96 :: 		TRISC=0;
0x0102	0x0187      	CLRF       TRISC
;transmitter.c,97 :: 		PORTC=0x00;
0x0103	0x1283      	BCF        STATUS, 5
0x0104	0x0187      	CLRF       PORTC
;transmitter.c,98 :: 		while(1){
L_main21:
;transmitter.c,99 :: 		if(PORTB.F0==1){
0x0105	0x1C06      	BTFSS      PORTB, 0
0x0106	0x290F      	GOTO       L_main23
;transmitter.c,100 :: 		transmitSignal(encodeSignal(0));
0x0107	0x01A6      	CLRF       FARG_encodeSignal_rawSignal
0x0108	0x01A7      	CLRF       FARG_encodeSignal_rawSignal+1
0x0109	0x207A      	CALL       _encodeSignal
0x010A	0x0870      	MOVF       R0, 0
0x010B	0x00A6      	MOVWF      FARG_transmitSignal_signal
0x010C	0x0871      	MOVF       R0+1, 0
0x010D	0x00A7      	MOVWF      FARG_transmitSignal_signal+1
0x010E	0x20C5      	CALL       _transmitSignal
;transmitter.c,101 :: 		}
L_main23:
;transmitter.c,103 :: 		if(PORTB.F1==1){
0x010F	0x1C86      	BTFSS      PORTB, 1
0x0110	0x291B      	GOTO       L_main24
;transmitter.c,105 :: 		transmitSignal(encodeSignal(1));
0x0111	0x3001      	MOVLW      1
0x0112	0x00A6      	MOVWF      FARG_encodeSignal_rawSignal
0x0113	0x3000      	MOVLW      0
0x0114	0x00A7      	MOVWF      FARG_encodeSignal_rawSignal+1
0x0115	0x207A      	CALL       _encodeSignal
0x0116	0x0870      	MOVF       R0, 0
0x0117	0x00A6      	MOVWF      FARG_transmitSignal_signal
0x0118	0x0871      	MOVF       R0+1, 0
0x0119	0x00A7      	MOVWF      FARG_transmitSignal_signal+1
0x011A	0x20C5      	CALL       _transmitSignal
;transmitter.c,106 :: 		}
L_main24:
;transmitter.c,108 :: 		if(PORTB.F2==1){
0x011B	0x1D06      	BTFSS      PORTB, 2
0x011C	0x2927      	GOTO       L_main25
;transmitter.c,109 :: 		transmitSignal(encodeSignal(2));
0x011D	0x3002      	MOVLW      2
0x011E	0x00A6      	MOVWF      FARG_encodeSignal_rawSignal
0x011F	0x3000      	MOVLW      0
0x0120	0x00A7      	MOVWF      FARG_encodeSignal_rawSignal+1
0x0121	0x207A      	CALL       _encodeSignal
0x0122	0x0870      	MOVF       R0, 0
0x0123	0x00A6      	MOVWF      FARG_transmitSignal_signal
0x0124	0x0871      	MOVF       R0+1, 0
0x0125	0x00A7      	MOVWF      FARG_transmitSignal_signal+1
0x0126	0x20C5      	CALL       _transmitSignal
;transmitter.c,110 :: 		}
L_main25:
;transmitter.c,112 :: 		if(PORTB.F3==1){
0x0127	0x1D86      	BTFSS      PORTB, 3
0x0128	0x2933      	GOTO       L_main26
;transmitter.c,113 :: 		transmitSignal(encodeSignal(3));
0x0129	0x3003      	MOVLW      3
0x012A	0x00A6      	MOVWF      FARG_encodeSignal_rawSignal
0x012B	0x3000      	MOVLW      0
0x012C	0x00A7      	MOVWF      FARG_encodeSignal_rawSignal+1
0x012D	0x207A      	CALL       _encodeSignal
0x012E	0x0870      	MOVF       R0, 0
0x012F	0x00A6      	MOVWF      FARG_transmitSignal_signal
0x0130	0x0871      	MOVF       R0+1, 0
0x0131	0x00A7      	MOVWF      FARG_transmitSignal_signal+1
0x0132	0x20C5      	CALL       _transmitSignal
;transmitter.c,114 :: 		}
L_main26:
;transmitter.c,116 :: 		if(PORTB.F4==1){
0x0133	0x1E06      	BTFSS      PORTB, 4
0x0134	0x293F      	GOTO       L_main27
;transmitter.c,117 :: 		transmitSignal(encodeSignal(4));
0x0135	0x3004      	MOVLW      4
0x0136	0x00A6      	MOVWF      FARG_encodeSignal_rawSignal
0x0137	0x3000      	MOVLW      0
0x0138	0x00A7      	MOVWF      FARG_encodeSignal_rawSignal+1
0x0139	0x207A      	CALL       _encodeSignal
0x013A	0x0870      	MOVF       R0, 0
0x013B	0x00A6      	MOVWF      FARG_transmitSignal_signal
0x013C	0x0871      	MOVF       R0+1, 0
0x013D	0x00A7      	MOVWF      FARG_transmitSignal_signal+1
0x013E	0x20C5      	CALL       _transmitSignal
;transmitter.c,118 :: 		}
L_main27:
;transmitter.c,120 :: 		if(PORTB.F5==1){
0x013F	0x1E86      	BTFSS      PORTB, 5
0x0140	0x294B      	GOTO       L_main28
;transmitter.c,121 :: 		transmitSignal(encodeSignal(5));
0x0141	0x3005      	MOVLW      5
0x0142	0x00A6      	MOVWF      FARG_encodeSignal_rawSignal
0x0143	0x3000      	MOVLW      0
0x0144	0x00A7      	MOVWF      FARG_encodeSignal_rawSignal+1
0x0145	0x207A      	CALL       _encodeSignal
0x0146	0x0870      	MOVF       R0, 0
0x0147	0x00A6      	MOVWF      FARG_transmitSignal_signal
0x0148	0x0871      	MOVF       R0+1, 0
0x0149	0x00A7      	MOVWF      FARG_transmitSignal_signal+1
0x014A	0x20C5      	CALL       _transmitSignal
;transmitter.c,122 :: 		}
L_main28:
;transmitter.c,123 :: 		if(PORTB.F6==1){
0x014B	0x1F06      	BTFSS      PORTB, 6
0x014C	0x2957      	GOTO       L_main29
;transmitter.c,124 :: 		transmitSignal(encodeSignal(6));
0x014D	0x3006      	MOVLW      6
0x014E	0x00A6      	MOVWF      FARG_encodeSignal_rawSignal
0x014F	0x3000      	MOVLW      0
0x0150	0x00A7      	MOVWF      FARG_encodeSignal_rawSignal+1
0x0151	0x207A      	CALL       _encodeSignal
0x0152	0x0870      	MOVF       R0, 0
0x0153	0x00A6      	MOVWF      FARG_transmitSignal_signal
0x0154	0x0871      	MOVF       R0+1, 0
0x0155	0x00A7      	MOVWF      FARG_transmitSignal_signal+1
0x0156	0x20C5      	CALL       _transmitSignal
;transmitter.c,125 :: 		}
L_main29:
;transmitter.c,126 :: 		if(PORTB.F7==1){
0x0157	0x1F86      	BTFSS      PORTB, 7
0x0158	0x2963      	GOTO       L_main30
;transmitter.c,127 :: 		transmitSignal(encodeSignal(7));
0x0159	0x3007      	MOVLW      7
0x015A	0x00A6      	MOVWF      FARG_encodeSignal_rawSignal
0x015B	0x3000      	MOVLW      0
0x015C	0x00A7      	MOVWF      FARG_encodeSignal_rawSignal+1
0x015D	0x207A      	CALL       _encodeSignal
0x015E	0x0870      	MOVF       R0, 0
0x015F	0x00A6      	MOVWF      FARG_transmitSignal_signal
0x0160	0x0871      	MOVF       R0+1, 0
0x0161	0x00A7      	MOVWF      FARG_transmitSignal_signal+1
0x0162	0x20C5      	CALL       _transmitSignal
;transmitter.c,128 :: 		}
L_main30:
;transmitter.c,130 :: 		}
0x0163	0x2905      	GOTO       L_main21
;transmitter.c,132 :: 		}
L_end_main:
0x0164	0x2964      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [29]    _delay500us
0x0020      [29]    _bitRead
0x003D       [7]    _____DoICP
0x0044      [24]    _preamble
0x005C      [30]    _delay3ms
0x007A      [75]    _encodeSignal
0x00C5      [45]    _transmitSignal
0x00F2      [12]    ___CC2DW
0x00FE     [103]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x000B       [0]    TMR0IE_bit
0x000B       [1]    INTCON
0x000B       [0]    TMR0IF_bit
0x0020       [2]    _counter
0x0022       [2]    _bitManipulate
0x0024       [2]    ___DoICPAddr
0x0026       [2]    FARG_transmitSignal_signal
0x0026       [2]    FARG_encodeSignal_rawSignal
0x0028       [2]    encodeSignal_encodedSignal_L0
0x0028       [2]    transmitSignal_j_L0
0x002A       [2]    preamble_i_L0
0x002A       [2]    FARG_bitRead_signal
0x002C       [2]    FARG_bitRead_bitPosition
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0086       [1]    TRISB
0x0087       [1]    TRISC
//** Label List: ** 
//----------------------------------------------
  L_delay3ms0
  L_delay3ms1
  L_delay3ms2
  L_delay3ms3
  L_delay500us4
  L_delay500us5
  L_delay500us6
  L_delay500us7
  L_preamble8
  L_preamble9
  L_preamble10
  L_transmitSignal11
  L_transmitSignal12
  L_transmitSignal13
  L_transmitSignal14
  L_transmitSignal15
  L_encodeSignal16
  L_encodeSignal17
  L_encodeSignal18
  L_encodeSignal19
  L_encodeSignal20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_end_bitRead
  _bitRead
  L__bitRead32
  L__bitRead33
  L_end_delay3ms
  _delay3ms
  L__delay3ms35
  L_end_delay500us
  _delay500us
  L__delay500us37
  L_end_preamble
  _preamble
  L__preamble39
  L_end_transmitSignal
  _transmitSignal
  L__transmitSignal41
  L__transmitSignal42
  L_end_encodeSignal
  _encodeSignal
  L__encodeSignal44
  L__encodeSignal45
  L_end_main
  _main
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
